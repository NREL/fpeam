# @NOTE values to be overwritten by the GUI

# setup and run MOVES
run_moves = True


# @NOTE values that can change but are not overwritten via GUI

# annual vehicle miles traveled by combination short-haul trucks
vmt_short_haul = 100

# population of combination short-haul trucks (assume one per trip and only run MOVES for single trip)
pop_short_haul = 1

# on-farm truck capacity (dt/load)
onfarm_truck_capacity = 15

# on-farm default distance to transport feedstock from field to roadside (miles)
onfarm_default_distance = 1

# truck capacity (dry tons per load; C = conventional, A = Advanced)
[truck_capacity]  # @NOTE: user-defined, but with reasonable limits?
[[CS]]
C = 17.28
A = 17.28

[[WS]]
C = 17.28
A = 17.28

[[SG]]
C = 17.28
A = 17.28

[[MS]]
C = 17.28
A = 17.28

[[CG]]
C = 17.28
A = 17.28

[[SS]]
C = 21.1
A = 21.1

[[FR]]
C = 16.68
A = 16.68

[[FW]]
C = 16.68
A = 16.68

# vehicle age distribution for MOVES runs
# for each year, list of 31 floats (corresponding to the 31 age bins (0 to 30 + years)) that add up to one
[age_distribution]  # @NOTE: MOVES defaults? Should be user input
2015 = 0.050590062, 0.046317722, 0.041226347, 0.04070861, 0.020141567, 0.015038551, 0.019363648, 0.017345624, 0.05612567, 0.041145746, 0.039979438, 0.024983001, 0.022164199, 0.017157746,0.033182057, 0.045379215, 0.040399892, 0.040820571, 0.033019335, 0.045537993, 0.05120439, 0.042158252, 0.030524249, 0.023199259, 0.021433809, 0.026546165, 0.026731556, 0.024593861, 0.0193089, 0.013313107, 0.030359304
2017 = 0.04987871, 0.049521105, 0.047870437, 0.04382777, 0.039010097, 0.038357544, 0.01885787, 0.014050241, 0.01801406, 0.016102406, 0.052102959, 0.038033342, 0.036876584, 0.022945066, 0.020312774, 0.015724521, 0.03027911, 0.041320663, 0.036627306, 0.036929408, 0.02974184, 0.040929826, 0.046022819, 0.037726504, 0.027256711, 0.020715842, 0.01905537, 0.023549532, 0.023713996, 0.021721428, 0.042924184
2022 = 0.05163085, 0.051356632, 0.051281189, 0.050634959, 0.0501715, 0.04763813, 0.046765663, 0.044697256, 0.040224943, 0.035194412, 0.034210168, 0.016625508, 0.012245756, 0.01551978, 0.013713011, 0.043858532, 0.031642831, 0.030326571, 0.018649843, 0.016317898, 0.012411034, 0.023618523, 0.031852016, 0.027899922, 0.02779988, 0.022255932, 0.030263228, 0.033627195, 0.02740033, 0.019559094, 0.040607634
2040 = 0.060278719, 0.05921783, 0.058047205, 0.056512732, 0.055128183, 0.053213664, 0.050660466, 0.048502476, 0.046228082, 0.043931553, 0.042002858, 0.03979092, 0.037682125, 0.035374342, 0.033132727,  0.030918238, 0.028455943, 0.026375726, 0.024715761, 0.023229583, 0.021737527, 0.020147825, 0.01880982, 0.016722668, 0.015493922, 0.014025774, 0.011900897, 0.00983702, 0.009060407, 0.004152013, 0.004713115

# fuel fraction
# @NOTE not sure what this is but it's needed
fuel_fraction = 0.08536200556149831, 0.9146379944385018, 0.08536200556149831, 0.9146379944385018, 0.08536200556149831, 0.9146379944385018, 0.08536200556149831, 0.9146379944385018, 0.08536200556149831, 0.9146379944385018, 0.08536200556149831, 0.9146379944385018, 0.08536200556149831, 0.9146379944385018, 0.08536200556149831, 0.9146379944385018, 0.08536200556149831, 0.9146379944385018, 0.08536200556149831, 0.9146379944385018, 0.08536200556149831, 0.9146379944385018, 0.08536202882976726, 0.9146379711702327, 0.08536200556149831, 0.9146379944385018, 0.08536199683590072, 0.9146380031640994, 0.08536200788832463, 0.9146379921116752, 0.08536198345665455, 0.9146380165433455, 0.0853620043980852, 0.9146379956019149, 0.08536200556149831, 0.9146379944385017, 0.08536200439808518, 0.9146379956019146, 0.08536200788832463, 0.9146379921116752, 0.08536197065911864, 0.9146380293408812, 0.08536200410723194, 0.9146379958927681, 0.01228148009333059, 0.9877185199066694, 0.01206371903402364, 0.9879362809659764, 0.005224204048576776, 0.9947757959514232, 0.0049968161143681715, 0.9950031838856319, 0.006093058639119228, 0.9939069413608808, 0.003703382057403777, 0.9962966179425963, 0.0033996717824477185, 0.9966003282175524, 0.006022581589987316, 0.9939774184100127, 0, 1, 0, 1, 0.0037589704830449677, 0.996241029516955, 0.0028920003467432635, 0.9971079996532567, 0, 1, 0.0014570947745463326, 0.9985429052254536, 0, 1, 0.0000020484269581927537, 0.9999979515730417, 0, 1, 0.000004779951534708229, 0.9999952200484654, 0.000017140950747676762, 0.9999828590492523, 0.00003818879512453507, 0.9999618112048755, 0.000019229927851575223, 0.9999807700721485, 0, 0.9999999999999999, 0.00006158186937717182, 0.9999384181306227, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0.9999999999999999, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1

# fraction of VMT by road type
# float that describes the fraction amount of time spent on each road type (sum of 2-5 should equal 1)
# there are five road types in MOVES but number 1 is off-network (idling, etc.)
# other road types (2: rural restricted; 3: rural unrestricted; 4: urban restricted; 5: urban unrestricted)
[vmt_fraction]  # @NOTE: ideally from route (e.g., calculated from routing module)
2 = 0.30
3 = 0.28
4 = 0.21
5 = 0.21

# Timespan for MOVES runs
# mo = month (list of values from 1-12)
# bhr = beginning hours (list of values from 1-24)
# ehr = ending hours (list of values from 1-24)
# d = day (list of values 2=weekday, 5=weekend)
[moves_timespan]
mo = 10,
bhr = 7,
ehr = 18,
d = 5,


# @NOTE values that should never change for any reason

# MOVES pollutant dictionary (pollutant name to pollutant ID)
[pollutant_dict]  # @NOTE: hardcoded from MOVES
NH3 = 30
CO = 2
NOX = 3
PM10 = 100
PM25 = 110
SO2 = 31
VOC = 87


# @NOTE values and flags to be removed

# clean up possible duplciated MOVESScenarioIDs
clean_moves = True
# reason: if MOVES is run the duplicate IDs should be removed automatically

# toggle for running moves on state level
state_level_moves = True
# reason: deprecated?  also gives results too coarse to be useful

# enable/disable running MOVES by crop type
moves_by_crop = False
# reason: results are already obtained by crop vis postprocessing?